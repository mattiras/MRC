#####################################################
#                      Macros                       #
#####################################################

[gcode_macro _START_PRINT]

variable_printing = 0

#todo force mesh leveling if any mesh not loaded
gcode:

    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=printing VALUE=1
    #{% if printer.z_tilt.applied == False %}
        #Z_TILT_ADJUST
    #{% endif %}
    {% if printer.bed_mesh.profile_name|string|length == 0 %}
        {action_respond_info("Loading default Mesh")}
        BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1
    {% elif printer.z_tilt.applied == False %}
        Z_TILT_ADJUST
    {% endif %}

    {% set i = printer["gcode_macro PRINTER_VAR"].num_of_tools %}
	{% for i in range(i) %}
			{% set var = "tool_%s_filament_park_t_stamp" % ( i|string ) %}
			SET_GCODE_VARIABLE MACRO=_TOOL_CHANGE_VAR VARIABLE={var} VALUE=-456789
	{% endfor %}

####

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print

rename_existing: _CANCEL_PRINT_2

gcode:
    TURN_OFF_HEATERS
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=printing VALUE=0
    BED_MESH_CLEAR
    M107
    _CANCEL_PRINT_2

####

[gcode_macro BED_MESH_CALIBRATE]

rename_existing: _BED_MESH_CALIBRATE_2
gcode:
  {% set t = params.T|default(0)|float %}
  {% set adaptive = params.ADAPTIVE|default(0)|int %}

  #{% if printer.idle_timeout.state == "Printing" %}
    #{action_respond_info("This command cannot be used while printing")}
  #{% if printer.toolhead.homed_axes != "xyz" %}
    #{action_respond_info("Please home XYZ first")}
  #{% else %}
    _LOWER_STEPPER_CURRENTS O=1
    {% if printer.toolhead.homed_axes != "xyz" %}
        SET_GCODE_VARIABLE MACRO=_HOMING_VAR VARIABLE=tool_wait VALUE=2
        G28
	{% endif %}
    Z_TILT_ADJUST
    #SAVE_GCODE_STATE NAME=G29_state
    #G90
    #G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    {% if printer.configfile.config.probe.pin == "^!Can_Exrtuder:PB9" %}
        {action_respond_info("Probe = Swich")}
        TOOL_UNLOAD P=0
    {% elif "PF5" in(printer.configfile.config.probe.pin) %}
        {action_respond_info("Probe = Piezo")}
        T0 P=0
        #TOOL_LOAD P=0
    {% else %}
        {action_respond_info("Unknown probe pin")}
        M112
    {% endif %}
    _BED_MESH_CALIBRATE_2 ADAPTIVE={adaptive}
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z10 F240
    TOOL_LOAD P=0
    SET_GCODE_VARIABLE MACRO=_HOMING_VAR VARIABLE=tool_wait VALUE=0
    #G1 X150 Y155 F6000
    #RESTORE_GCODE_STATE NAME=G29_state MOVE=0
    _LOWER_STEPPER_CURRENTS O=0

  
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(100)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-110 F1000
    RESTORE_GCODE_STATE NAME=M600_state

####

[gcode_macro Z_TILT_ADJUST]

rename_existing: _Z_TILT_ADJUST_2
gcode:
    _LOWER_STEPPER_CURRENTS O=1
    {% if printer.toolhead.homed_axes != "xyz" %}
        SET_GCODE_VARIABLE MACRO=_HOMING_VAR VARIABLE=tool_wait VALUE=1
        {% set tool_wait = 1 %}
        G28
	{% endif %}
    {% if printer.configfile.config.probe.pin == "^!Can_Exrtuder:PB9" %}
        {action_respond_info("Probe = Switch")}
        {% set park = "tool_%s_filament_park" % printer["gcode_macro TOOL_UNLOAD"].current_tool %}
        {% set park = printer["gcode_macro _TOOL_CHANGE_VAR"][park]|int %}
         TOOL_UNLOAD P={park}
         _Z_TILT_ADJUST_2
    {% elif "PF5" in(printer.configfile.config.probe.pin) %}
        {action_respond_info("Probe = Piezo")}
        T0 P=0
        #TOOL_LOAD P=0
        _Z_TILT_ADJUST_2
    {% else %}
        {action_respond_info("Unknown probe pin")}
        M112
    {% endif %}
    #{% if printer["gcode_macro _HOMING_VAR"].tool_wait == 1 %}
    {% if tool_wait == 1 %}
        G0 Z10
        TOOL_LOAD P=0
        SET_GCODE_VARIABLE MACRO=_HOMING_VAR VARIABLE=tool_wait VALUE=0
    {% endif %}
    _LOWER_STEPPER_CURRENTS O=0
    
####

[filament_switch_sensor toolhead_filament_sensor]
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
    {% if printer["gcode_macro TOOL_LOAD"].loaded == 1 and
          printer["gcode_macro OFFSET_CAL"].start_tool == -1 and
          printer["gcode_macro _START_PRINT"].printing == 1 %}
        {action_respond_info("Toolhead filament runout detected @ During print")}
        PAUSE
        #G1 E-110 F1000
	{% endif %}

#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
insert_gcode:
    {action_respond_info("Toolhead filament insert detected")}

#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: ^!Can_Exrtuder:PB3
#   The pin on which the switch is connected. This parameter must be
#   provided.

####

[gcode_macro PROBE_ACCURACY]

rename_existing: _PROBE_ACCURACY_2
gcode:

    TOOL_UNLOAD
    G0 X150 Y150
    _PROBE_ACCURACY_2

####

#[gcode_macro M104]

#rename_existing: _SET_HEATER_TEMPERATURE_2
#gcode:
    
    #{% set tool_called = params.T|default(printer.toolhead.extruder) %}
    #{% set temp = params.S|default(0) %}
    #{action_respond_info("heating  %s to %.2f" % ( tool_called, temp ) )}

    #SET_HEATER_TEMPERATURE HEATER={tool_called} TARGET={temp}
    

####
#[gcode_macro M104]
#[gcode_macro SET_HEATER_TEMPERATURE]

#rename_existing: _M104
#rename_existing: _SET_HEATER_TEMPERATURE
#gcode:

    #{% set tool_called = params.HEATER|default() %}
    #{% set temp = params.TARGET|default(0) %}
    #{action_respond_info("heating  %s to %.2f" % ( tool_called|string, temp|float ) )}

    #_SET_HEATER_TEMPERATURE HEATER={tool_called} TARGET={temp}
    

####